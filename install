#!/usr/bin/env bash

dotfiles="$HOME/dotfiles"
ohmyzsh="$HOME/.oh-my-zsh"

# Make sure we have sudo privileges
sudo -v

# Ensure that dotfiles have been cloned into $HOME
if [ ! -d "$dotfiles" ]; then
    echo "dotfiles must be cloned into $dotfiles" 1>&2
    exit 1
fi

echo
echo "Cloning submodules..."
echo "> git submodule update --init --recursive"
git submodule update --init --recursive

echo
echo "Cloning oh-my-zsh..."

if [ -d "$ohmyzsh" ]; then
    echo "$ohmyzsh already exists"
else
    git clone https://github.com/ohmyzsh/ohmyzsh "$ohmyzsh"
fi

echo
echo "Creating symlinks..."

symlinks=(
    "bin:.local/bin"
    "gitconfig:.gitconfig"
    "zsh/zshrc:.zshrc"
    "zsh/powerlevel10k:.oh-my-zsh/custom/themes/powerlevel10k"
    "zsh/p10k.zsh:.p10k.zsh"
    "zsh/zsh-autosuggestions:.oh-my-zsh/custom/plugins/zsh-autosuggestions"
    "zsh/zsh-syntax-highlighting:.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
)

for symlink in ${symlinks[@]}; do
    # Split string by ':'
    IFS=":" read target link <<< $symlink

    # Check if already linked
    if [ -L "$HOME/$link" ] || [ -f "$HOME/$link" ] || [ -d "$HOME/$link" ]; then
        echo "$HOME/$link already exists"
    else
        echo "Creating $link -> $target"
        ln -s "$dotfiles/$target" "$HOME/$link"
    fi
done

echo
echo "Installing rust..."

if command -v rustup &> /dev/null ; then
    rustup update
else
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    source "$HOME/.cargo/env"
fi

echo
echo "Installing nodejs..."

curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

nvm install node

echo
echo "Installing other utils..."

sudo apt-get update
sudo apt-get upgrade -y
sudo apt-get install -y httpie direnv

if ! command -v gcc &> /dev/null ; then
    sudo apt-get install gcc -y
fi

cargo install exa
cargo install bat
cargo install ytop

echo
